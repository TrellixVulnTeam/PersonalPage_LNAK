{"version":3,"sources":["./src/environments/environment.ts","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/email-form/email-form.component.ts","./src/app/email-form/email-form.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/email-form/email-form.service.ts","./src/app/email-ser.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet, MatBottomSheetRef} from '@angular/material/bottom-sheet';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport { EmailFormComponent } from '../email-form/email-form.component';\n\nimport {EmailFormService} from '../email-form/email-form.service';\nimport { EmailSerService } from '../email-ser.service';\nimport { Mail } from '../mail.model';\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent {\n\n    constructor(private bottomSheet: MatBottomSheet,\n                public dialog: MatDialog,\n                public emailFormService: EmailFormService,\n                private emailServ: EmailSerService,\n               ) {\n        this.emailFormService.getSer().subscribe(data => this.sendEmail(data))\n    }\n\n    ngOnInit(): void {\n    }\n\n    openDialog(){\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.minHeight = '700px';\n\n        let dialogRef = this.dialog.open(EmailFormComponent,\n            dialogConfig\n        )\n    }\n\n     openBottomSheet(): void{\n         this.bottomSheet.open(ContactMeSheet)\n     }\n\n    sendEmail(data: Mail){\n         console.log('data', data)\n         this.emailServ.sendMail(data).subscribe()\n     }\n\n}\n\n@Component({\n    selector: 'app-contact-me',\n    template: `<h2 mat-dialog-title>Phones are down!</h2>\n<div mat-dialog-content class=\"mat-typography\"><p>No offense, but I am not gonna give out my phone number, the email button works though.</p></div>\n\n`,\n    styleUrls: ['./home-page.component.scss']\n})\n export class ContactMeSheet{\n     constructor(private bottomSheetRef: MatBottomSheetRef<ContactMeSheet>,\n                 ){}\n\n     \n }\n","<mat-toolbar color=\"primary\">\n    <span class=\"filler\"></span>\n    Christopher Valentine\n    <span class=\"filler\"></span>\n</mat-toolbar>\n<div>\n    <mat-grid-list cols=\"2\" rowHeight=\"500px\">\n        <mat-grid-tile>\n\n            <img src=\"../../assets/images/tree-drawing.png\"\n                 class=\"img-fluid\">\n            <div class =\"center\" >\n            </div>\n        </mat-grid-tile>\n        <mat-grid-tile\n            [colspan]=\"1\"\n            [rowspan]=\"2\">\n            <div class=\"flex-container\" >\n                <mat-grid-tile-header >\n                    <span class=\"filler\"></span>\n                    <h2>\n                        Resume\n                    </h2>\n                    <span class=\"filler\"></span>\n                </mat-grid-tile-header>\n                    <p>I am transitioning from a career in IP (patents) to web development.  I started this journey making a quiz app to help me study for a patent exam, but ended up having a lot of fun making the app, at least more fun than studying for a patent exam.</p>\n\n                <mat-list role=\"list\">\n                <mat-divider></mat-divider>\n                <div mat-subheader>Skills</div>\n                <mat-list-item role=\"listitem\">\n                    <div matLine>\n                        Django\n                    </div>\n                    <div matLine>\n                        DjangoRestFramework\n                    </div>\n                    <div matLine>\n                        Angular\n                    </div>\n                </mat-list-item>\n                <mat-list-item role=\"listitem\">\n                    <div matLine>\n                        Experience with Patents\n                    </div>\n                    <div matLine>\n                        More details available upon request\n                    </div>\n                </mat-list-item>\n\n                <mat-divider></mat-divider>\n                <div mat-subheader>Demo Websites</div>\n                <mat-list-item role=\"listitem\">\n                    <mat-icon mat-list-icon>space_dashboard\n                    </mat-icon>\n                    <div matLine>\n                        Patent Portfolio (MVVM, Angular + Django)\n                    </div>\n                    <div matLine>\n                        <a href=\"https://patport.cc\" >\n                            https://patport.cc\n                        </a>\n                    </div>\n                </mat-list-item>\n\n                <mat-list-item role=\"listitem\">\n                    <mat-icon mat-list-icon>model_training</mat-icon>\n                    <div matLine>\n                        Quiz Course (MVC, Django)\n                    </div>\n                    <div matLine>\n                        <a href=\"https://gentle-brushlands-05163.herokuapp.com\">\n                            https://gentle-brushlands-05163.herokuapp.com\n                        </a>\n                    </div>\n                </mat-list-item>\n                <mat-list-item role=\"listitem\">\n                    <mat-icon mat-list-icon>source</mat-icon>\n                    <div matLine>\n                        GitHub Account\n                    </div>\n                    <div matLine>\n                        <a href=\"https://github.com/cval245\">\n                            https://github.com/cval245</a>\n                    </div>\n                </mat-list-item>\n                <mat-divider></mat-divider>\n                <div mat-subheader>Education</div>\n                <mat-list-item role=\"listitem\">\n                    <div matLine> B.S. Physics - 2015</div>\n                    <div matLine> Roanoke College</div>\n                    <div matLine> Salem, VA</div>\n                </mat-list-item>\n                <mat-divider></mat-divider>\n                <div mat-subheader>Previous Work Experience</div>\n                <mat-list-item role=\"listitem\">\n                    <div matLine> IP Specialist (patents)</div>\n                    <div matLine> Lintec of America, Inc</div>\n                    <div matLine> Nano-Science & Technology Center\n                    </div>\n                    <div matLine> Richardson, TX</div>\n                </mat-list-item>\n                </mat-list>\n            </div>\n        </mat-grid-tile>\n        <mat-grid-tile>\n            <button mat-flat-button color=\"accent\"\n                    (click)=\"openBottomSheet()\">\n                Call me</button>\n            <button mat-flat-button color=\"accent\" (click)=\"openDialog()\">Email Me</button>\n        </mat-grid-tile>\n    </mat-grid-list>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport {CdkTextareaAutosize} from '@angular/cdk/text-field';\nimport { ViewChild } from '@angular/core';\nimport {EmailFormService} from './email-form.service';\n@Component({\n  selector: 'app-email-form',\n  templateUrl: './email-form.component.html',\n  styleUrls: ['./email-form.component.scss']\n})\nexport class EmailFormComponent implements OnInit {\n    emailForm: FormGroup\n    submitted: boolean ;\n    call = true;\n\n    constructor(public dialogRef: MatDialogRef<EmailFormComponent>,\n                public emailFormService: EmailFormService) {\n        this.emailForm = this.createFormGroup()\n    }\n\n    ngOnInit(): void {\n        this.submitted = false;\n    }\n\n    @ViewChild('autosize')\n    txtAreaAutosize: CdkTextareaAutosize;\n\n    get f() {return this.emailForm.controls}\n\n    createFormGroup(){\n        return new FormGroup({\n          //  personalData: new FormGroup({\n                name: new FormControl('', Validators.required),\n                company: new FormControl(),\n            email_address: new FormControl('',\n                                           [Validators.required,\n                                           Validators.email]),\n           // }),\n            //email: new FormGroup({\n                subject: new FormControl('', Validators.required),\n                content: new FormControl('', Validators.required),\n            //})\n        })\n    }\n\n    getErrorMessage(){\n        console.log('get')\n        if (this.f.email.hasError('required')){\n            return 'You must enter a value';\n        }\n        console.log('sss')\n        return this.f.email.hasError('email') ? 'Not a valid email':'';\n    }\n\n    close(){\n        this.dialogRef.close()\n    }\n\n    onSubmit(){\n\n        if (this.submitted == false){\n        if(this.emailForm.valid) {\n            console.log('email submit')\n            this.submitted = true;\n            this.emailFormService.setSer(this.emailForm.value)\n            this.close()\n            // go to saving service\n            // upload to Observable\n            // SetSer\n        }\n        }\n    }\n\n}\n","<div style=\"width: 100%\">\n    <div mat-dialog-title>Send me an email</div>\n<form class=\"email-form\"  [formGroup]=\"emailForm\"\n      (ngSubmit)=\"onSubmit()\">\n        <p class=\"mat-subheading-2\">\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\n                <mat-label>Name:</mat-label>\n                <input matInput formControlName=\"name\" required>\n                <mat-error>Please provide your name</mat-error>\n            </mat-form-field>\n\n        </p>\n        <p>\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\n                <mat-label>Company:</mat-label>\n                    <input matInput formControlName=\"company\"/>\n            </mat-form-field>\n        </p>\n        <div>\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\n                <mat-label>Email Address: </mat-label>\n                <input matInput type=\"email\"\n                       formControlName=\"email_address\"\n                       [email]=\"call\" required>\n                <mat-error>Please enter a valid email address</mat-error>\n            </mat-form-field>\n        </div>\n        <p class=\"mat-subheading-2\">\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\n                <mat-label>Subject:</mat-label>\n                    <input matInput\n                           formControlName=\"subject\" required />\n            </mat-form-field>\n            <mat-form-field class=\"full-width \"\n                            appearance=\"fill\">\n                <mat-label>Content:</mat-label>\n                <textarea matInput\n                          cdkTextareaAutosize\n                          cdkAutosizeMinRows=\"6\"\n                          formControlName=\"content\"\n                          required >\n                    </textarea>\n            </mat-form-field>\n        </p>\n    <mat-dialog-actions align=\"end\">\n    <button mat-flat-button class=\"submit\" color=\"accent\" (click)=\"onSubmit()\">Submit</button>\n    <button mat-button class=\"cancel\" color=\"accent\" (click)=\"close()\">Close</button>\n    </mat-dialog-actions>\n</form>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'personal-page';\n}\n","\n<body>\n<router-outlet></router-outlet>\n<app-home-page></app-home-page>\n</body>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { ContactComponent } from './contact/contact.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport { EmailFormComponent } from './email-form/email-form.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {TextFieldModule} from '@angular/cdk/text-field';\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    ContactComponent,\n    EmailFormComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        MatSliderModule,\n        MatGridListModule,\n        MatToolbarModule,\n        MatListModule,\n        MatIconModule,\n        MatCardModule,\n        MatButtonModule,\n        MatBottomSheetModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatInputModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Mail } from '../mail.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailFormService {\n\n    // Create Subject\n    private ser = new Subject();\n    // as observable\n    private getServ = this.ser.asObservable();\n\n    constructor() { }\n\n    getSer(){\n        console.log('getServ')\n        return this.getServ\n    }\n\n    setSer(data: Mail){\n        console.log('serSer')\n        this.ser.next(data)\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Mail } from './mail.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EmailSerService {\n\n    baseUrl = `http://127.0.0.1:8000/email/`;\n\n    constructor(private http: HttpClient) { }\n\n    public sendMail(mail: Mail): Observable<Mail> {\n        console.log('send mail', mail, this.baseUrl)\n        this.http.get('http://localhost:8000/email/')\n        return this.http.post<Mail>(this.baseUrl, mail)\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}